{"ast":null,"code":"var _jsxFileName = \"/Users/emiliovalladares/Desktop/clicky-game/src/App.jsx\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from \"./components/header/Header\";\nimport Instruction from \"./components/instructions/Instruction\";\nimport Notifier from \"./components/notifier/Notifier\";\nimport ImagesContainer from \"./components/imagesContainer/ImagesContainer\";\nimport Footer from \"./components/footer/Footer\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headerName: \"Hello I am header coming from state\",\n      gameStarted: false,\n      count: 9,\n      isWinner: false,\n      lost: false\n    };\n\n    this.startGame = () => {\n      this.setState({\n        gameStarted: true\n      });\n    };\n\n    this.shuffle = images => {\n      var currentIndex = images.length,\n          temporaryValue,\n          randomIndex; // While there remain elements to shuffle...\n\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1; // And swap it with the current element.\n\n        temporaryValue = images[currentIndex];\n        images[currentIndex] = images[randomIndex];\n        images[randomIndex] = temporaryValue;\n      }\n\n      return images;\n    };\n\n    this.handleLostState = () => {\n      this.setState({\n        lost: true\n      });\n    };\n\n    this.handleCount = () => {\n      if (this.state.count === 0) {\n        this.setState({\n          isWinner: true\n        });\n      } else {\n        this.setState({\n          count: this.state.count - 1\n        });\n      }\n    };\n  }\n\n  render() {\n    let _this$state = this.state,\n        count = _this$state.count,\n        isWinner = _this$state.isWinner,\n        lost = _this$state.lost;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Header, {\n      headerName: \"Dragon Ball Z Clicker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), this.state.gameStarted ? React.createElement(Notifier, {\n      handleRestart: this.handleRestart,\n      count: count,\n      isWinner: isWinner,\n      lost: lost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }) : React.createElement(Instruction, {\n      startGame: this.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(ImagesContainer, {\n      handleLostState: this.handleLostState,\n      handleCount: this.handleCount,\n      shuffle: this.shuffle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/emiliovalladares/Desktop/clicky-game/src/App.jsx"],"names":["React","Component","Header","Instruction","Notifier","ImagesContainer","Footer","App","state","headerName","gameStarted","count","isWinner","lost","startGame","setState","shuffle","images","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","handleLostState","handleCount","render","handleRestart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Header from \"./components/header/Header\";\nimport Instruction from \"./components/instructions/Instruction\";\nimport Notifier from \"./components/notifier/Notifier\";\nimport ImagesContainer from \"./components/imagesContainer/ImagesContainer\";\nimport Footer from \"./components/footer/Footer\";\n\n\nclass App extends Component {\n  state = {\n    headerName: \"Hello I am header coming from state\",\n    gameStarted: false,\n    count: 9,\n    isWinner: false,\n    lost: false\n\n  }\n\n  startGame = () => {\n    this.setState({ gameStarted: true });\n  }\n\n  shuffle = (images) => {\n    var currentIndex = images.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = images[currentIndex];\n      images[currentIndex] = images[randomIndex];\n      images[randomIndex] = temporaryValue;\n    }\n\n    return images;\n  }\n\n  handleLostState = () => {\n    this.setState({ lost: true });\n  }\n\n  handleCount = () => {\n    if(this.state.count === 0){\n      this.setState({isWinner: true});\n    }else{\n      this.setState({count: this.state.count-1});\n    }\n    \n  }\n\n\n  render() {\n    let { count, isWinner, lost } = this.state;\n    return (\n      <div className=\"App\">\n        <Header headerName=\"Dragon Ball Z Clicker\" />\n        {this.state.gameStarted ? <Notifier\n          handleRestart={this.handleRestart}\n          count={count}\n          isWinner = {isWinner}\n          lost={lost} /> :\n          <Instruction startGame={this.startGame} />}\n        \n        <ImagesContainer\n          handleLostState = {this.handleLostState} \n          handleCount={this.handleCount} \n          shuffle={this.shuffle} />\n        \n        <Footer />\n      </div>\n    )\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}